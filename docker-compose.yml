services:
  pixel-battle-db:
    image: postgres:16-alpine

    container_name: pixel-battle-db
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - pixel-battle-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 10
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}


  pixel-battle-redis:
    image: redis:7-alpine
    container_name: pixel-battle-redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      retries: 5
    restart: unless-stopped
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    expose:
      - "6379"
    volumes:
      - pixel-battle-redis-data:/data

  pixel-battle-be:
    build: .
    image: ghcr.io/zebarowhite-alliance/pixel-battle-be:latest
    container_name: pixel-battle-be
    restart: unless-stopped
    depends_on:
      pixel-battle-db:
        condition: service_healthy
      pixel-battle-redis:
        condition: service_healthy

    environment:
      JWT_SECRET: ${JWT_SECRET}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

      # PostgreSQL â€” Spring Datasource
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      # Redis
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

    expose:
      - "8080"

volumes:
  pixel-battle-db-data:
  pixel-battle-redis-data:
