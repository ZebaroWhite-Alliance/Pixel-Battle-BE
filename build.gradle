plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'ua.cn.stu'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

checkstyle {
	toolVersion = '11.0.1'
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
	showViolations = true
	ignoreFailures = false
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot and JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.flywaydb:flyway-core:11.13.2'
	implementation "org.flywaydb:flyway-database-postgresql:11.13.2"

	runtimeOnly 'org.postgresql:postgresql:42.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// JWT
	implementation 'com.auth0:java-jwt:4.4.0'

	// Lombok (for annotations)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//OpenAPI / Swagger UI
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.12"

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core:5.16.1'

	// Docker Compose for development
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
}



tasks.named('test') {
	useJUnitPlatform()
}
